@using System.Diagnostics
@using System.Text
@using WatchIt.Common.Model.Media
@using WatchIt.Website.Services.WebAPI.Media
@inherits LayoutComponentBase

@if (loaded)
{
    <div class="container-xl">
        <div class="row align-items-center m-2 rounded-3 header panel">
            <div class="col-sm-4">
                <a class="logo" href="/">
                    WatchIt
                </a>
            </div>
            <div class="col-sm-4">
                <p>Menu</p>
            </div>
            <div class="col-sm-4">
                <div class="d-flex flex-row-reverse">
                    @if (signedIn)
                    {
                        <p>test</p>
                    }
                    else
                    {
                        <a class="main-button" href="/auth">Sign in or up</a>
                    }
                </div>
            </div>
        </div>
        <div class="row body-content">
            <div class="col-sm-12">
                @Body
            </div>
        </div>
    </div>

    <style>
        body {
            background: url('@background') no-repeat center center fixed;
        }
        
        .logo, .main-button {
            background-image: linear-gradient(45deg, @firstGradientColor, @secondGradientColor);
        }
    </style>
}




@code
{
    #region SERVICES

    [Inject] public ILogger<MainLayout> Logger { get; set; } = default!;
    [Inject] public IMediaWebAPIService MediaWebAPIService { get; set; } = default!;

    #endregion



    #region FIELDS

    private bool loaded = false;
    
    private string background = "assets/background_temp.jpg";
    private string firstGradientColor = "#c6721c";
    private string secondGradientColor = "#85200c";
    private bool signedIn = false;

    #endregion



    #region METHODS

    protected override async Task OnInitializedAsync()
    {
        Action<MediaPhotoResponse> backgroundSuccess = (data) =>
        {
            string imageBase64 = Convert.ToBase64String(data.Image);
            string firstColor = BitConverter.ToString(data.Background.FirstGradientColor)
                                            .Replace("-", string.Empty);
            string secondColor = BitConverter.ToString(data.Background.SecondGradientColor)
                                             .Replace("-", string.Empty);
            
            background = $"data:{data.MimeType};base64,{imageBase64}";
            firstGradientColor = $"#{firstColor}";
            secondGradientColor = $"#{secondColor}";
        };
        await MediaWebAPIService.GetPhotoRandomBackground(backgroundSuccess, null);
        
        loaded = true;
    }

    #endregion
}