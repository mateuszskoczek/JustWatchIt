@typeparam TRole where TRole : WatchIt.Common.Model.Roles.IRoleResponse, WatchIt.Common.Query.IQueryOrderable<TRole>
@typeparam TQuery where TQuery : WatchIt.Common.Query.QueryParameters<TRole>

@if (_loaded)
{
    <div class="vstack">
        @for (int i = 0; i < _roles.Count; i++)
        {
            if (i > 0)
            {
                <hr/>
            }
            <RoleComponent AdditionalName="@(AdditionalTextSource is not null ? AdditionalTextSource(_roles[i]) : null)"/>
        }
        <div class="d-flex justify-content-center">
            <button class="btn btn-secondary" @onclick="@(async () => await GetRoles())">
                <LoadingButtonContentComponent Content="Load more"
                                               LoadingContent="Loading..."
                                               IsLoading="@(_rolesFetching)"/>
            </button>
        </div>
    </div>
}
else
{
    <LoadingComponent/>
}