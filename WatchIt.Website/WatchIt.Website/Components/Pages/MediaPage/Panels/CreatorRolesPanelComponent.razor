@using WatchIt.Common.Model.Roles
@using WatchIt.Website.Components.Pages.MediaPage.Subcomponents



<div class="panel panel-padding-regular panel-radius-regular panel-background-regular @(Class)">
    @if (_loaded)
    {
        <div class="vstack gap-3">
            <span class="panel-text-title">Creators</span>
            <div class="d-flex justify-content-center">
                <RadioGroup TValue="short" Color="Color.Default" Buttons Size="Size.Small" CheckedValue="@(_query.TypeId!.Value)" CheckedValueChanged="CheckedTypeChanged">
                    @foreach (RoleTypeResponse roleType in _roleTypes)
                    {
                        <Radio Value="@(roleType.Id)">@roleType.Name</Radio>
                    }
                </RadioGroup>
            </div>
            <RoleListComponent @ref=@(_roleListComponent) 
                               Id="@(Id)"
                               TRole="CreatorRoleResponse"
                               TQuery="CreatorRoleMediaQueryParameters"
                               Query="@(_query)"
                               GetRolesAction="MediaWebAPIService.GetMediaAllCreatorRoles"
                               GetGlobalRatingAction="@((id, action) => RolesWebAPIService.GetCreatorRoleRating(id, action))"
                               GetUserRatingAction="@((id, userId, actionSuccess, actionNotFound) => RolesWebAPIService.GetCreatorRoleRatingByUser(id, userId, actionSuccess, actionNotFound))"
                               PutRatingAction="(id, request) => RolesWebAPIService.PutActorRoleRating(id, request)"
                               DeleteRatingAction="(id) => RolesWebAPIService.DeleteActorRoleRating(id)"/>
        </div>
    }
    else
    {
        <LoadingComponent Color="@(LoadingComponent.LoadingComponentColors.Light)"/>
    }
</div>