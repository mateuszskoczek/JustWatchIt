@using WatchIt.Common.Model.Persons
@using WatchIt.Common.Model.Roles



<div class="panel @(Class)">
    <div class="vstack gap-3">
        <span class="panel-text-title">Actor</span>
        <RoleListComponent TRole="ActorRoleResponse"
                           TQuery="ActorRolePersonQueryParameters"
                           TRoleParent="MediaResponse"
                           Id="@(Id)"
                           GetRolesAction="@(PersonsWebAPIService.GetPersonAllActorRoles)"
                           NameSource="@((_, parent) => parent.Title)"
                           AdditionalInfoSource="@((item, _) => $" as {item.Name}")"
                           GetRoleParentMethod="@((id, action) => MediaWebAPIService.GetMedia(id, action))"
                           ParentItemIdSource="@(item => item.MediaId)"
                           ParentUrlTemplate="/media/{0}"
                           PosterPlaceholder="/assets/media_poster.png"
                           PosterDownloadingTask="@((id, action) => MediaWebAPIService.GetMediaPoster(id, action))"
                           GetGlobalRatingMethod="@((id, action) => RolesWebAPIService.GetActorRoleRating(id, action))"
                           GetUserRatingMethod="@((id, userId, actionSuccess, actionNotFound) => RolesWebAPIService.GetActorRoleRatingByUser(id, userId, actionSuccess, actionNotFound))"
                           PutRatingMethod="@((id, request) => RolesWebAPIService.PutActorRoleRating(id, request))"
                           DeleteRatingMethod="@(id => RolesWebAPIService.DeleteActorRoleRating(id))"
                           OnRatingChanged="@(OnRatingChanged)"/>
    </div>
</div>